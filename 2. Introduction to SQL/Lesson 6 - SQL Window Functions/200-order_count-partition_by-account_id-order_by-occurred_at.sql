/*
Programming for Data Science with Python Nanodegree
Udacity's certified program > SQL practice > Lesson 6 : SQL Window Functions

WINDOW FUNCTIONS:

Order count of standard_qty, 'PARTITION BY' account_id and
'ORDER BY' occurred_at
*/

SELECT account_id,
       DATE_TRUNC('month', occurred_at),
       standard_qty,
       COUNT(standard_qty) OVER (PARTITION BY account_id ORDER BY occurred_at) AS order_count
FROM orders;

/*
Output6912 results
account_id	date_trunc	standard_qty	order_count
1001	2015-10-01T00:00:00.000Z	123	1
1001	2015-11-01T00:00:00.000Z	506	2
1001	2015-11-01T00:00:00.000Z	190	3
1001	2015-12-01T00:00:00.000Z	526	4
1001	2015-12-01T00:00:00.000Z	85	5
1001	2016-01-01T00:00:00.000Z	566	6
1001	2016-01-01T00:00:00.000Z	144	7
1001	2016-02-01T00:00:00.000Z	473	8
1001	2016-02-01T00:00:00.000Z	108	9
1001	2016-03-01T00:00:00.000Z	103	10
1001	2016-03-01T00:00:00.000Z	498	11
1001	2016-04-01T00:00:00.000Z	497	12
1001	2016-04-01T00:00:00.000Z	101	13
1001	2016-05-01T00:00:00.000Z	483	14
1001	2016-05-01T00:00:00.000Z	95	15
1001	2016-05-01T00:00:00.000Z	531	16
1001	2016-05-01T00:00:00.000Z	91	17
1001	2016-06-01T00:00:00.000Z	94	18
1001	2016-07-01T00:00:00.000Z	457	19
1001	2016-07-01T00:00:00.000Z	101	20
1001	2016-08-01T00:00:00.000Z	557	21
1001	2016-08-01T00:00:00.000Z	124	22
1001	2016-09-01T00:00:00.000Z	507	23
1001	2016-09-01T00:00:00.000Z	104	24
1001	2016-10-01T00:00:00.000Z	97	25
1001	2016-11-01T00:00:00.000Z	485	26
1001	2016-11-01T00:00:00.000Z	127	27
1001	2016-12-01T00:00:00.000Z	123	28
1011	2016-12-01T00:00:00.000Z	527	1
1021	2015-10-01T00:00:00.000Z	516	1
1021	2015-10-01T00:00:00.000Z	0	  2
1021	2015-11-01T00:00:00.000Z	0	  3
*/

/*
1. As rows are partitioned by account_id, order_count resets for every
account_id

2. As rows are ordered by occurred_at, order_count increments for every
occurred_at.
*/
