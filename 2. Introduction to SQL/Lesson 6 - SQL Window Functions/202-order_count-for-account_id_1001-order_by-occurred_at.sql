/*
Programming for Data Science with Python Nanodegree
Udacity's certified program > SQL practice > Lesson 6 : SQL Window Functions

WINDOW FUNCTIONS:

Order count of standard_qty for accont with id 1001,
'PARTITION BY' account_id and 'ORDER BY' occurred_at
*/


SELECT account_id,
       DATE_TRUNC('month', occurred_at),
       standard_qty,
       COUNT(standard_qty) OVER (ORDER BY occurred_at) AS order_count
FROM orders
WHERE account_id = 1001;

/*
Output 28 results
account_id	date_trunc	standard_qty	order_count
1001	2015-10-01T00:00:00.000Z	123	1
1001	2015-11-01T00:00:00.000Z	506	2
1001	2015-11-01T00:00:00.000Z	190	3
1001	2015-12-01T00:00:00.000Z	526	4
1001	2015-12-01T00:00:00.000Z	85	5
1001	2016-01-01T00:00:00.000Z	566	6
1001	2016-01-01T00:00:00.000Z	144	7
1001	2016-02-01T00:00:00.000Z	473	8
1001	2016-02-01T00:00:00.000Z	108	9
1001	2016-03-01T00:00:00.000Z	103	10
1001	2016-03-01T00:00:00.000Z	498	11
1001	2016-04-01T00:00:00.000Z	497	12
1001	2016-04-01T00:00:00.000Z	101	13
1001	2016-05-01T00:00:00.000Z	483	14
1001	2016-05-01T00:00:00.000Z	95	15
1001	2016-05-01T00:00:00.000Z	531	16
1001	2016-05-01T00:00:00.000Z	91	17
1001	2016-06-01T00:00:00.000Z	94	18
1001	2016-07-01T00:00:00.000Z	457	19
1001	2016-07-01T00:00:00.000Z	101	20
1001	2016-08-01T00:00:00.000Z	557	21
1001	2016-08-01T00:00:00.000Z	124	22
1001	2016-09-01T00:00:00.000Z	507	23
1001	2016-09-01T00:00:00.000Z	104	24
1001	2016-10-01T00:00:00.000Z	97	25
1001	2016-11-01T00:00:00.000Z	485	26
1001	2016-11-01T00:00:00.000Z	127	27
1001	2016-12-01T00:00:00.000Z	123	28
*/

/*
Same query but with more clean data is presented below:
*/

SELECT account_id,
       DATE_PART('year', occurred_at) AS Year,
       DATE_PART('month', occurred_at) AS Month,
       standard_qty,
       COUNT(standard_qty) OVER (ORDER BY occurred_at) AS order_count
FROM orders
WHERE account_id = 1001;

/*
Output 28 results
account_id	year	month	standard_qty	order_count
1001	2015	10	123	1
1001	2015	11	506	2
1001	2015	11	190	3
1001	2015	12	526	4
1001	2015	12	85	5
1001	2016	1	  566	6
1001	2016	1	  144	7
1001	2016	2	  473	8
1001	2016	2	  108	9
1001	2016	3	  103	10
1001	2016	3	  498	11
1001	2016	4	  497	12
1001	2016	4	  101	13
1001	2016	5	  483	14
1001	2016	5	  95	15
1001	2016	5	  531	16
1001	2016	5	  91	17
1001	2016	6	  94	18
1001	2016	7	  457	19
1001	2016	7	  101	20
1001	2016	8	  557	21
1001	2016	8	  124	22
1001	2016	9	  507	23
1001	2016	9	  104	24
1001	2016	10	97	25
1001	2016	11	485	26
1001	2016	11	127	27
1001	2016	12	123	28
*/
